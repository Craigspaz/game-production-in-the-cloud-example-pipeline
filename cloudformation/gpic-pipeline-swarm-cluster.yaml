Resources:
  SwarmInstanceRole6BCAB0C0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonEC2RoleforSSM
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/EC2InstanceProfileForImageBuilder
      Policies:
        - PolicyDocument:
            Statement:
              - Action: s3:GetObject
                Effect: Allow
                Resource:
                  Fn::Join:
                    - ""
                    - - Fn::ImportValue: gpic-pipeline-foundation:ExportsOutputFnGetAttgpicpipelinebucket6D2579DDArnC5C75313
                      - /*
            Version: "2012-10-17"
          PolicyName: GPICDemo_UESwarmAccess
    Metadata:
      aws:cdk:path: gpic-pipeline-swarm-cluster/SwarmInstanceRole/Resource
  SwarmInstanceRoleDefaultPolicy939A4DEF:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: UnrealEngineSwarmInstancespassword695BA7B3
        Version: "2012-10-17"
      PolicyName: SwarmInstanceRoleDefaultPolicy939A4DEF
      Roles:
        - Ref: SwarmInstanceRole6BCAB0C0
    Metadata:
      aws:cdk:path: gpic-pipeline-swarm-cluster/SwarmInstanceRole/DefaultPolicy/Resource
  GpicSwarmInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: SwarmInstanceRole6BCAB0C0
      InstanceProfileName: ue5-swarm-instance-profile
      Path: /executionServiceEC2Role/
    Metadata:
      aws:cdk:path: gpic-pipeline-swarm-cluster/GpicSwarmInstanceProfile
  UE5SwarmSecurityGroup58BC7F66:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for UE5 Swarm Agent and Coordinator
      GroupName: Allow UE5 Swarm communication
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 10.0.0.0/8
          Description: Allow Trusted IP Swarm TCP
          FromPort: 8008
          IpProtocol: tcp
          ToPort: 8009
        - CidrIp: 10.0.0.0/8
          Description: Allow Trusted IP Swarm ICMP Ping
          FromPort: 8
          IpProtocol: icmp
          ToPort: -1
        - CidrIp: 10.0.0.0/8
          Description: Allow Trusted IP RDP TCP
          FromPort: 3389
          IpProtocol: tcp
          ToPort: 3389
      VpcId:
        Fn::ImportValue: gpic-pipeline-foundation:ExportsOutputRefVPCB9E5F0B4BD23A326
    Metadata:
      aws:cdk:path: gpic-pipeline-swarm-cluster/UE5-Swarm-SecurityGroup/Resource
  UE5SwarmSecurityGroupfromgpicpipelineswarmclusterUE5SwarmSecurityGroup78930DA180088009188E7E3A:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Allow SG Swarm TCP
      FromPort: 8008
      GroupId:
        Fn::GetAtt:
          - UE5SwarmSecurityGroup58BC7F66
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - UE5SwarmSecurityGroup58BC7F66
          - GroupId
      ToPort: 8009
    Metadata:
      aws:cdk:path: gpic-pipeline-swarm-cluster/UE5-Swarm-SecurityGroup/from gpicpipelineswarmclusterUE5SwarmSecurityGroup78930DA1:8008-8009
  UE5SwarmSecurityGroupfromgpicpipelineswarmclusterUE5SwarmSecurityGroup78930DA1ICMPType88DDD4ADF:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: icmp
      Description: Allow SG Swarm ICMP Ping
      FromPort: 8
      GroupId:
        Fn::GetAtt:
          - UE5SwarmSecurityGroup58BC7F66
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - UE5SwarmSecurityGroup58BC7F66
          - GroupId
      ToPort: -1
    Metadata:
      aws:cdk:path: gpic-pipeline-swarm-cluster/UE5-Swarm-SecurityGroup/from gpicpipelineswarmclusterUE5SwarmSecurityGroup78930DA1:ICMP Type 8
  SwarmComponent:
    Type: AWS::ImageBuilder::Component
    Properties:
      Name: Install-Swarm-Dependencies
      Platform: Windows
      Version: 1.0.0
      Data:
        Fn::Join:
          - ""
          - - |-
              name: InstallUE5Swarm
              description: This component installs UE5 Swarm from S3 archive and also installs all prerequirements for a build.
              schemaVersion: 1.0

              phases:
                - name: build
                  steps:
                    - name: CreateTempFolder
                      action: CreateFolder
                      inputs:
                        - path: C:\ue5-swarm-temp
                    - name: DownloadDependencies
                      action: S3Download
                      maxAttempts: 3
                      inputs:
                        - source: s3://
            - Fn::ImportValue: gpic-pipeline-foundation:ExportsOutputRefgpicpipelinebucket6D2579DDA0504931
            - |
              /ue5-swarm-archive.zip
                          destination: C:\ue5-swarm-temp\ue5-swarm-archive.zip
                    - name: CreateSwarmFolder
                      action: CreateFolder
                      inputs:
                        - path: C:\ue5-swarm
                    - name: UncompressSwarmFiles
                      action: ExecutePowerShell
                      inputs:
                        commands:
                          - Expand-Archive -LiteralPath C:\ue5-swarm-temp\ue5-swarm-archive.zip -DestinationPath C:\ue5-swarm
                    - name: DeleteTempFolder
                      action: DeleteFolder
                      inputs:
                        - path: C:\ue5-swarm-temp
                          force: true
                    - name: InstallDotNet
                      action: ExecutePowerShell
                      inputs:
                        commands:
                          - Install-WindowsFeature Net-Framework-Core
                    - name: InstallPreReqs
                      action: ExecutePowerShell
                      inputs:
                        commands:
                          - Start-Process -Wait -FilePath "C:\ue5-swarm\UEPrereqSetup_x64.exe" -ArgumentList "/install /quiet"
                    - name: OpenFirewall
                      action: ExecutePowerShell
                      inputs:
                        commands:
                          - New-NetFirewallRule -DisplayName 'Allow UE5 Swarm TCP' -Direction Inbound -Action Allow -Protocol TCP -LocalPort 8008-8009
                          - New-NetFirewallRule -DisplayName 'Allow UE5 Swarm UDP' -Direction Inbound -Action Allow -Protocol UDP -LocalPort 8008-8009
                          - New-NetFirewallRule -DisplayName 'Allow ICMP' -Direction Inbound -Action Allow -Protocol ICMPv4
    Metadata:
      aws:cdk:path: gpic-pipeline-swarm-cluster/SwarmComponent
  SwarmInfraConfig:
    Type: AWS::ImageBuilder::InfrastructureConfiguration
    Properties:
      InstanceProfileName: ue5-swarm-instance-profile
      Name: GPIC-UE5-Swarm-WindowsServer-2019-Infra-Config
      InstanceTypes:
        - m5.large
      SecurityGroupIds:
        - Fn::GetAtt:
            - UE5SwarmSecurityGroup58BC7F66
            - GroupId
      SubnetId:
        Fn::ImportValue: gpic-pipeline-foundation:ExportsOutputRefVPCPrivateSubnet1Subnet8BCA10E01F79A1B7
    DependsOn:
      - GpicSwarmInstanceProfile
    Metadata:
      aws:cdk:path: gpic-pipeline-swarm-cluster/SwarmInfraConfig
  ImageRecipe:
    Type: AWS::ImageBuilder::ImageRecipe
    Properties:
      Components:
        - ComponentArn:
            Fn::GetAtt:
              - SwarmComponent
              - Arn
      Name: GPIC-UE5-Swarm-Image
      ParentImage:
        Ref: SsmParameterValueawsserviceamiwindowslatestWindowsServer2019EnglishFullBaseC96584B6F00A464EAD1953AFF4B05118Parameter
      Version: 1.0.0
    Metadata:
      aws:cdk:path: gpic-pipeline-swarm-cluster/ImageRecipe
  UnrealEngineSwarmImage:
    Type: AWS::ImageBuilder::Image
    Properties:
      InfrastructureConfigurationArn:
        Fn::GetAtt:
          - SwarmInfraConfig
          - Arn
      ImageRecipeArn:
        Fn::GetAtt:
          - ImageRecipe
          - Arn
    Metadata:
      aws:cdk:path: gpic-pipeline-swarm-cluster/UnrealEngineSwarmImage
  UnrealEngineSwarmInstancespassword695BA7B3:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString: {}
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: gpic-pipeline-swarm-cluster/Unreal Engine Swarm Instances password/Resource
  ue5swarmcoordinatorInstanceProfile6BA76DE6:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: SwarmInstanceRole6BCAB0C0
    Metadata:
      aws:cdk:path: gpic-pipeline-swarm-cluster/ue5-swarm-coordinator/InstanceProfile
  ue5swarmcoordinatorF31E1DFE:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      IamInstanceProfile:
        Ref: ue5swarmcoordinatorInstanceProfile6BA76DE6
      ImageId:
        Fn::GetAtt:
          - UnrealEngineSwarmImage
          - ImageId
      InstanceType: t3.large
      SecurityGroupIds:
        - Fn::GetAtt:
            - UE5SwarmSecurityGroup58BC7F66
            - GroupId
      SubnetId:
        Fn::ImportValue: gpic-pipeline-foundation:ExportsOutputRefVPCPrivateSubnet1Subnet8BCA10E01F79A1B7
      Tags:
        - Key: Name
          Value: gpic-pipeline-swarm-cluster/ue5-swarm-coordinator
      UserData:
        Fn::Base64:
          Fn::Join:
            - ""
            - - |-
                <powershell>
                ## Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
                ## SPDX-License-Identifier: MIT-0

                # Get Administrator password from AWS Secrets Manager
                $admin_password_plaintext = Get-SECSecretValue 
              - Ref: UnrealEngineSwarmInstancespassword695BA7B3
              - |-2
                 | % { Echo $_.SecretString} 
                $admin_password_secure_string = $admin_password_plaintext | ConvertTo-SecureString -AsPlainText -Force

                # Set Administrator password 
                Get-LocalUser -Name "Administrator" | Set-LocalUser -Password $admin_password_secure_string

                # Define the Swarm Coordinator to start as a Scheduled task at startup
                $action = New-ScheduledTaskAction -Execute "C:\ue5-swarm\SwarmCoordinator.exe"
                $trigger = New-ScheduledTaskTrigger -AtStartup
                Register-ScheduledTask -Action $action -Trigger $trigger -User "Administrator" -Password $admin_password_plaintext -TaskName "SwarmCoordinator" -Description "UE5 Swarm Coordinator" -RunLevel Highest -AsJob

                # Restart the instance to trigger the Schedule task.
                Restart-Computer
                </powershell>
    DependsOn:
      - SwarmInstanceRoleDefaultPolicy939A4DEF
      - SwarmInstanceRole6BCAB0C0
    Metadata:
      aws:cdk:path: gpic-pipeline-swarm-cluster/ue5-swarm-coordinator/Resource
  ue5swarmagentInstanceProfileCE81A3E4:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: SwarmInstanceRole6BCAB0C0
    Metadata:
      aws:cdk:path: gpic-pipeline-swarm-cluster/ue5-swarm-agent/InstanceProfile
  ue5swarmagentLaunchConfig92C91706:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId:
        Fn::GetAtt:
          - UnrealEngineSwarmImage
          - ImageId
      InstanceType: c5.4xlarge
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            DeleteOnTermination: true
            VolumeSize: 100
      IamInstanceProfile:
        Ref: ue5swarmagentInstanceProfileCE81A3E4
      SecurityGroups:
        - Fn::GetAtt:
            - UE5SwarmSecurityGroup58BC7F66
            - GroupId
      UserData:
        Fn::Base64:
          Fn::Join:
            - ""
            - - |-
                <powershell>
                ## Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
                ## SPDX-License-Identifier: MIT-0

                # Get Administrator password from AWS Secrets Manager

                $admin_password_plaintext = Get-SECSecretValue 
              - Ref: UnrealEngineSwarmInstancespassword695BA7B3
              - |-2
                 | % { Echo $_.SecretString} 
                $admin_password_secure_string = $admin_password_plaintext | ConvertTo-SecureString -AsPlainText -Force

                # Set Administrator password 
                Get-LocalUser -Name "Administrator" | Set-LocalUser -Password $admin_password_secure_string

                # Define Coordinator IP, Cloudformation replaces this when task is been created
                $coordinator_ip = "
              - Fn::GetAtt:
                  - ue5swarmcoordinatorF31E1DFE
                  - PrivateIp
              - |-
                "

                # Template of the Swarm Agent Developper Options file
                $developeroptions = '<?xml version="1.0"?>
                <SettableDeveloperOptions xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                  <LocalEnableLocalPerformanceMonitoring>true</LocalEnableLocalPerformanceMonitoring>
                  <LocalJobsDefaultProcessorCount>LOCALCORES</LocalJobsDefaultProcessorCount>
                  <LocalJobsDefaultProcessPriority>BelowNormal</LocalJobsDefaultProcessPriority>
                  <RemoteJobsDefaultProcessorCount>REMOTECORES</RemoteJobsDefaultProcessorCount>
                  <RemoteJobsDefaultProcessPriority>Idle</RemoteJobsDefaultProcessPriority>
                  <UpdateAutomatically>false</UpdateAutomatically>
                  <OptionsVersion>15</OptionsVersion>
                </SettableDeveloperOptions>'

                # Calculate number of cores
                $cores = (Get-WmiObject -Class Win32_Processor | Select-Object -Property NumberOfLogicalProcessors).NumberOfLogicalProcessors

                # Set the core values for the Swarm Agent
                $developeroptions = $developeroptions.replace("REMOTECORES", $cores)
                $developeroptions = $developeroptions.replace("LOCALCORES", $cores-1)

                # Save the configureation file
                $developeroptions | Out-File -FilePath "C:\ue5-swarm\SwarmAgent.DeveloperOptions.xml"

                # Template of the Swarm Options file
                $agentoptions = '<?xml version="1.0"?>
                <SettableOptions xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                  <SerialisableColours>
                    <SerialisableColour LocalColour="-1" />
                    <SerialisableColour LocalColour="-1" />
                    <SerialisableColour LocalColour="-1" />
                    <SerialisableColour LocalColour="-1" />
                    <SerialisableColour LocalColour="-5658199" />
                    <SerialisableColour LocalColour="-5658199" />
                    <SerialisableColour LocalColour="-5658199" />
                    <SerialisableColour LocalColour="-2894893" />
                    <SerialisableColour LocalColour="-1" />
                    <SerialisableColour LocalColour="-7667712" />
                    <SerialisableColour LocalColour="-7667712" />
                    <SerialisableColour LocalColour="-2987746" />
                    <SerialisableColour LocalColour="-2987746" />
                    <SerialisableColour LocalColour="-16777077" />
                    <SerialisableColour LocalColour="-16777077" />
                    <SerialisableColour LocalColour="-16777077" />
                    <SerialisableColour LocalColour="-16777077" />
                    <SerialisableColour LocalColour="-16777077" />
                    <SerialisableColour LocalColour="-16777077" />
                    <SerialisableColour LocalColour="-7278960" />
                    <SerialisableColour LocalColour="-16744448" />
                    <SerialisableColour LocalColour="-16711681" />
                    <SerialisableColour LocalColour="-8388480" />
                    <SerialisableColour LocalColour="-16744448" />
                    <SerialisableColour LocalColour="-16777216" />
                    <SerialisableColour LocalColour="-16777216" />
                    <SerialisableColour LocalColour="-16777216" />
                  </SerialisableColours>
                  <AllowedRemoteAgentNames>*</AllowedRemoteAgentNames>
                  <AllowedRemoteAgentGroup>ue5-swarm-aws</AllowedRemoteAgentGroup>
                  <AgentGroupName>ue5-swarm-aws</AgentGroupName>
                  <CoordinatorRemotingHost>COORDINATORHOST</CoordinatorRemotingHost>
                  <CacheFolder>C:\ue5-swarm/SwarmCache</CacheFolder>
                  <MaximumJobsToKeep>5</MaximumJobsToKeep>
                  <BringToFront>false</BringToFront>
                  <ShowDeveloperMenu>true</ShowDeveloperMenu>
                  <OptionsVersion>15</OptionsVersion>
                  <WindowLocation>
                    <X>0</X>
                    <Y>0</Y>
                  </WindowLocation>
                  <WindowSize>
                    <Width>768</Width>
                    <Height>768</Height>
                  </WindowSize>
                  <AgentTabIndex>2</AgentTabIndex>
                  <VisualiserZoomLevel>4</VisualiserZoomLevel>
                </SettableOptions>'

                # Replace the Coordinator IP in the template
                $agentoptions = $agentoptions.replace("COORDINATORHOST", $coordinator_ip)

                # Save the configuration file
                $agentoptions | Out-File -FilePath "C:\ue5-swarm\SwarmAgent.Options.xml"

                # Define the Swarm agent as Scheduled Task that starts at instance boot
                $action = New-ScheduledTaskAction -Execute "C:\ue5-swarm\SwarmAgent.exe"
                $trigger = New-ScheduledTaskTrigger -AtStartup
                Register-ScheduledTask -Action $action -Trigger $trigger -User "Administrator" -Password $admin_password_plaintext -TaskName "SwarmAgent" -Description "UE5 Swarm Agent" -RunLevel Highest

                # Restart the instance to trigger the Swarm Agent Scheduled Task
                Restart-Computer
                </powershell>
    DependsOn:
      - SwarmInstanceRoleDefaultPolicy939A4DEF
      - SwarmInstanceRole6BCAB0C0
    Metadata:
      aws:cdk:path: gpic-pipeline-swarm-cluster/ue5-swarm-agent/LaunchConfig
  ue5swarmagentASGD632CDF3:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      MaxSize: "1"
      MinSize: "1"
      DesiredCapacity: "1"
      LaunchConfigurationName:
        Ref: ue5swarmagentLaunchConfig92C91706
      Tags:
        - Key: Name
          PropagateAtLaunch: true
          Value: gpic-pipeline-swarm-cluster/ue5-swarm-agent
      VPCZoneIdentifier:
        - Fn::ImportValue: gpic-pipeline-foundation:ExportsOutputRefVPCPrivateSubnet1Subnet8BCA10E01F79A1B7
        - Fn::ImportValue: gpic-pipeline-foundation:ExportsOutputRefVPCPrivateSubnet2SubnetCFCDAA7AB22CF85D
    UpdatePolicy:
      AutoScalingScheduledAction:
        IgnoreUnmodifiedGroupSizeProperties: true
    Metadata:
      aws:cdk:path: gpic-pipeline-swarm-cluster/ue5-swarm-agent/ASG
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/31Q207DMAz9lr1n2QVeeAPtAU2aRNV9QfDczqxJKscRqqL8O2nLKgQST/Y5Pj6+7PR++6i3q2fzGdZwuW0SeEadzmLgpg6Nqwwbi4Ksagw+MuDIvkXpo6iDd0E4gozcvZ7V6JXIWJ1q3036KVa+Ixgm0yU7FgPjACv2DXWlF2FfpiNEJhle2cd+lP1PHF3LGIK6m/00zoqsafE9UndB1qmUDt723qGTWdewmY+IjOWghtrIRsi7qTw21wjU4wKzCgiMEqxxBfK0b8Hfe5WsvCCKD2A6cq1OLwWcZ7AccDLRwfXPvN/SnLOqBrl6t3nQT3q3+ghEa45OyKKu5/gFFxhE/cUBAAA=
    Metadata:
      aws:cdk:path: gpic-pipeline-swarm-cluster/CDKMetadata/Default
Parameters:
  SsmParameterValueawsserviceamiwindowslatestWindowsServer2019EnglishFullBaseC96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-windows-latest/Windows_Server-2019-English-Full-Base
Outputs:
  UnrealEngine5SwarmAMI:
    Description: The AMI that is be used to deploy the Unreal Engine 5 Swarm Coordinator an the agents.
    Value:
      Fn::GetAtt:
        - UnrealEngineSwarmImage
        - ImageId
  UnrealEngine5SwarmCoordinatorPrivateIP:
    Description: The private IP of the Unreal Engine 5 Swam coordinator.
    Value:
      Fn::GetAtt:
        - ue5swarmcoordinatorF31E1DFE
        - PrivateIp

